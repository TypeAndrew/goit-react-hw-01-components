{"version":3,"sources":["components/Profile/Profile.module.css","components/FriendList/Friends.module.css","components/Statistics/Statistics.module.css","components/TransactionHistory/TransactionHistory.module.css","index.js","components/Profile/Profile.jsx","components/Statistics/Statistics.jsx","components/FriendList/FriendList.jsx","components/TransactionHistory/TransactionHistory.jsx"],"names":["module","exports","stats","itemList","profile","description","quantity","name","imgLogo","avatar","list","blockList","dotRed","dotGreen","title","statistics","tableHead","findValue","Profile","_ref","user","react_default","a","createElement","className","styles","src","alt","username","tag","location","followers","views","likes","Statistics","statData","map","element","style","backgroundColor","concat","Math","floor","random","toString","key","id","label","percentage","FriendList","friends","main","isOnline","TransactionHistoryHeader","transactions","display","justifyContent","alignItems","fontSize","color","type","amount","currency","data","forEach","undefined","find","el","push","ReactDOM","createRoot","document","getElementById","render","StrictMode","Profile_Profile","Statistics_Statistics","FriendList_FriendList","TransactionHistory_TransactionHistoryHeader"],"mappings":"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","file":"static/js/main.171e4045.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"stats\":\"Profile_stats__2DXXK\",\"itemList\":\"Profile_itemList__3p2XW\",\"profile\":\"Profile_profile__33qQq\",\"description\":\"Profile_description__194uS\",\"quantity\":\"Profile_quantity__1IuHe\",\"name\":\"Profile_name__2JkeB\",\"imgLogo\":\"Profile_imgLogo__3U2lw\",\"avatar\":\"Profile_avatar__3i6EJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"Friends_list__bNW6o\",\"itemList\":\"Friends_itemList__3aZVA\",\"imgLogo\":\"Friends_imgLogo__26Lxk\",\"blockList\":\"Friends_blockList__1FmQm\",\"dotRed\":\"Friends_dotRed__Xy8Gs\",\"dotGreen\":\"Friends_dotGreen__2TkoS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"Statistics_list__iUo5V\",\"itemList\":\"Statistics_itemList__Xxju8\",\"title\":\"Statistics_title__1MsMp\",\"statistics\":\"Statistics_statistics__3Ksvw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"tableHead\":\"TransactionHistory_tableHead___TrDh\"};","import React from 'react'\nimport ReactDOM from 'react-dom/client';\nimport user from './components/Profile/user.json'\nimport { Profile } from './components/Profile/Profile';\nimport data from './components/Statistics/data.json';\nimport { Statistics } from './components/Statistics/Statistics';\nimport { FriendList } from './components/FriendList/FriendList';\nimport { TransactionHistoryHeader } from './components/TransactionHistory/TransactionHistory';\nimport friends from './components/FriendList/friends.json'\n\nimport transactions from './components/TransactionHistory/transactions.json';\n\nimport './index.css';\n\nlet statData = [];\nlet findValue;\ndata.forEach((element) => {\n    findValue = statData.find(el => el.label === element.label);\n    if (findValue === undefined) {\n        statData.push(element);\n    } else {\n        findValue.percentage += element.percentage;\n    }\n});\n\nReactDOM.createRoot(document.getElementById('root')).render(\n  <React.StrictMode>\n    <Profile user={user} />\n    <Statistics statData={statData}/>\n    <FriendList friends={friends} />   \n    <TransactionHistoryHeader transactions={transactions} />\n  </React.StrictMode>\n);\n\n","import React from 'react'\nimport styles from './Profile.module.css';\nimport PropTypes from \"prop-types\";\n\nexport const Profile = ({user}) => {\n  \n  return (\n    \n      <div className={styles.profile}>\n        <div className={styles.description}>\n          <div className={styles.imgLogo}>\n          <img \n            src={user.avatar}\n            alt=\"User avatar\"\n            className={styles.avatar}\n            />\n          </div>\n          <p className={styles.name}>{user.username}</p>\n          <p className=\"tag\">{user.tag}</p>\n          <p className=\"location\">{user.location}</p>\n        </div>\n\n        <ul className={styles.stats}>\n          <li className={styles.itemList}>\n            <span className=\"label\">Followers</span>\n            <p>\n              <span className={styles.quantity}> {user.stats.followers}</span>\n            </p>\n          </li>\n          <li className={styles.itemList}>\n            <span className=\"label\">Views</span>\n            <p>\n              <span className={styles.quantity}> {user.stats.views}</span>\n            </p>\n          </li>\n          <li className={styles.itemList}>\n            <span className=\"label\">Likes</span>\n            <p>\n          <span className={styles.quantity}> {user.stats.likes}</span>\n          </p>\n          </li>\n        </ul>\n      </div>\n  \n  );\n};\n\nProfile.propTypes = {\n  user: PropTypes.shape({\n    username: PropTypes.string.isRequired,\n    location: PropTypes.string.isRequired,\n    avatar: PropTypes.string.isRequired,\n    tag: PropTypes.string.isRequired,\n    stats: PropTypes.shape({\n      followers: PropTypes.number.isRequired,\n      views: PropTypes.number.isRequired,\n      likes: PropTypes.number.isRequired,\n    })\n  }),\n  \n};","import React from 'react'\nimport styles from './Statistics.module.css';\nimport PropTypes from \"prop-types\";\n\n\n\nlet getRandomHexColor = function() {\n  return `#${Math.floor(Math.random() * 16777215).toString(16)}`;\n}\n  \nexport const Statistics = ({statData }) => {\n \n return (\n   <section className={styles.statistics}>\n     <h2 className={styles.title}>Upload stats</h2>\n        <ul className={styles.list }>\n        {statData.map(element =>\n            <li style={{\n             backgroundColor: getRandomHexColor()}} className={styles.itemList} key={element.id}>\n            <span className=\"label\">{element.label}</span>\n            <span>  </span>\n            <span className=\"percentage\">{element.percentage}%</span>      \n            </li>\n        )}\n        </ul>\n    </section>  \n    );\n     \n};\n\nStatistics.propTypes = {\n  statData: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      label: PropTypes.string.isRequired,\n      percentage: PropTypes.number.isRequired,\n      })\n  )\n}","import React from 'react'\nimport styles from './Friends.module.css';\nimport PropTypes from \"prop-types\";\n\nexport const FriendList = ({ friends }) => {\n    \n    return (\n    <div className={styles.main }>\n        <ul className={styles.list }>\n        {friends.map(element =>\n            <li className={styles.itemList } key={element.id}>\n                <div className={styles.blockList}>\n                    {element.isOnline === true\n                        ? <span className={styles.dotGreen}></span>\n                        : <span className={styles.dotRed}></span>}\n                    <img className={styles.imgLogo} src={element.avatar} alt={element.name}></img>{element.name}</div></li>\n        )}\n        </ul>\n    </div>  \n    );\n           \n};    \n\nFriendList.propTypes = {\n  friends: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      isOnline: PropTypes.bool.isRequired,\n      avatar: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,  \n      })\n  )\n}","import React from 'react'\nimport styles from './TransactionHistory.module.css';\nimport PropTypes from \"prop-types\";\n\nexport const TransactionHistoryHeader = ({ transactions }) => {\n    \n    return (\n    <div className='wrapper' \n        style={{\n        \n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'center',\n        fontSize: 30,\n        color: '#010101'\n            }}\n     >\n    <table> \n        <thead className={styles.tableHead}>\n        <tr>\n       \n        <td>TYPE</td>\n        <td>AMOUNT</td>\n        <td>CURRENCY</td>           \n        </tr>\n        </thead>\n        <tbody>\n        {transactions.map(element =>\n            <tr key={element.id}>\n            \n            <td>{element.type}</td>\n            <td>{element.amount}</td>\n            <td>{element.currency}</td>\n            </tr>\n        )}\n        </tbody>\n        </table>\n    </div>  \n    );\n           \n};    \n\nTransactionHistoryHeader.propTypes = {\n  transactions: PropTypes.arrayOf(\n    PropTypes.shape({\n  \n      type: PropTypes.string.isRequired,\n      amount: PropTypes.string.isRequired,\n      currency: PropTypes.string.isRequired,  \n      })\n  )\n}"],"sourceRoot":""}